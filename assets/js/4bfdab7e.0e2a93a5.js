"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[272],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var i=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=i.createContext({}),l=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=l(e.components);return i.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},d=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=l(t),m=a,v=d["".concat(s,".").concat(m)]||d[m]||u[m]||r;return t?i.createElement(v,o(o({ref:n},p),{},{components:t})):i.createElement(v,o({ref:n},p))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,o=new Array(r);o[0]=d;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var l=2;l<r;l++)o[l]=t[l];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}d.displayName="MDXCreateElement"},3066:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return u}});var i=t(3117),a=t(102),r=(t(7294),t(3905)),o=["components"],c={},s="Usage",l={unversionedId:"usage",id:"usage",title:"Usage",description:"Creating an Injection Container",source:"@site/docs/usage.mdx",sourceDirName:".",slug:"/usage",permalink:"/ts-injection/docs/usage",editUrl:"https://github.com/burketyler/ts-injection/docs/usage.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Setup",permalink:"/ts-injection/docs/setup"}},p={},u=[{value:"Creating an Injection Container",id:"creating-an-injection-container",level:2},{value:"Defining an injectable",id:"defining-an-injectable",level:2},{value:"Classes",id:"classes",level:3},{value:"Injectable objects",id:"injectable-objects",level:3},{value:"Injecting dependencies",id:"injecting-dependencies",level:2},{value:"\ud83c\udf3e Field injection",id:"-field-injection",level:3},{value:"\ud83d\udd28 Constructor injection",id:"-constructor-injection",level:3},{value:"Environment variables",id:"environment-variables",level:2},{value:"Circular dependencies",id:"circular-dependencies",level:2}],d={toc:u};function m(e){var n=e.components,t=(0,a.Z)(e,o);return(0,r.kt)("wrapper",(0,i.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"usage"},"Usage"),(0,r.kt)("h2",{id:"creating-an-injection-container"},"Creating an Injection Container"),(0,r.kt)("p",null,"An ",(0,r.kt)("inlineCode",{parentName:"p"},"InjectionContainer")," is an encapsulated DI environment where Injectables can be stored and retrieved\nEach container is initialized with a separate copy of every ",(0,r.kt)("inlineCode",{parentName:"p"},"@Injectable")," class and objects registered\nto one container cannot be accessed by classes in another container."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const container = new InjectionContainer();\n")),(0,r.kt)("p",null,"A container will automatically initialize when created, instantiating every class that from the class\nregistry. You can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"isManualInit")," option is provided in the configuration to change this behaviour."),(0,r.kt)("h2",{id:"defining-an-injectable"},"Defining an injectable"),(0,r.kt)("h3",{id:"classes"},"Classes"),(0,r.kt)("p",null,"Use the ",(0,r.kt)("inlineCode",{parentName:"p"},"@Injectable")," annotation to let the framework know that you intend for this class to be handled\nby the injection context. This means that it can be injected into other classes and that any injectable\nclasses provided as newable arguments are automatically resolved."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'@Injectable()\nclass ArnyService {\n  public getQuote(): string {\n    const quotes = [\n      "Hasta la vista, baby!",\n      "If it bleeds, we can kill it.",\n      "Come with me if you want to live.",\n    ];\n\n    return getRandomItem(quotes);\n  }\n}\n')),(0,r.kt)("h3",{id:"injectable-objects"},"Injectable objects"),(0,r.kt)("p",null,"You may come across use cases where manually registering objects or classes in the DI container is\nrequired. In this scenario you can call the ",(0,r.kt)("inlineCode",{parentName:"p"},"register")," method. An ",(0,r.kt)("inlineCode",{parentName:"p"},"InjectableItem")," is returned including\na unique token that can be used to reference the injectable in the future."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const container = new InjectionContainer({\n  isManualInit: true,\n});\n\nconst config: Config = {\n  isFeatureEnabled: true,\n};\n\nconst { token: configToken } = container.register(config).successOrThrow();\n")),(0,r.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"If you intend to register injectables manually, make sure you choose to manually\ninitialize your container, otherwise they may not be available in your classes."))),(0,r.kt)("h2",{id:"injecting-dependencies"},"Injecting dependencies"),(0,r.kt)("h3",{id:"-field-injection"},"\ud83c\udf3e Field injection"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ArnyService")," class could instead be injected into the ",(0,r.kt)("inlineCode",{parentName:"p"},"ArnyQuoteApp")," class,\nusing field injection. The config object we manually injected can also be injected using its injection\ntoken."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"@Injectable\nexport class ArnyQuoteApp {\n  @Autowire(ArnyService)\n  private service: ArnyService;\n\n  @Autowire(configToken)\n  private config: ConfigObject;\n\n  public tryGetQuote(): string | void {\n    if (this.config.isFeatureEnabled) {\n      return this.service.getQuote();\n    }\n  }\n}\n")),(0,r.kt)("h3",{id:"-constructor-injection"},"\ud83d\udd28 Constructor injection"),(0,r.kt)("p",null,"The same can be achieved via constructor injection, which is the only injection type which\nallows access to the injectables inside the class constructor."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"@Injectable\nexport class ArnyQuoteApp {\n  private readonly isEnabled: boolean;\n\n  constructor(\n    @Autowire(configToken)\n    private config: ConfigObject,\n    @Autowire(ArnyService)\n    private service: ArnyService\n  ) {\n    this.isEnabled = config.isFeatureEnabled;\n  }\n\n  public tryGetQuote(): string | void {\n    if (this.isEnabled) {\n      return this.service.getQuote();\n    }\n  }\n}\n")),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"@Autowire")," decorator isn't strictly required for classes that have been registered with\nthe ",(0,r.kt)("inlineCode",{parentName:"p"},"@Injectable")," decorator. The injection framework is smart enough to infer what should be injected by\nadding the class as a parameter."))),(0,r.kt)("h2",{id:"environment-variables"},"Environment variables"),(0,r.kt)("p",null,"You can inject environment variables into class members using the ",(0,r.kt)("inlineCode",{parentName:"p"},"@Env")," annotation.\nThe framework will use the ",(0,r.kt)("inlineCode",{parentName:"p"},"type")," of the ",(0,r.kt)("inlineCode",{parentName:"p"},"class member")," to infer how to parse the value.\nSupported types are: ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"object"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),".\nYou can also optionally pass a mapping function that will take in the string value and\nreturn the mapped value."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'process.env.CFG_STR = "test";\nprocess.env.CFG_NUM = "123";\nprocess.env.CFG_BOOL = "true";\nprocess.env.CFG_OBJ = \'{"myObj": "hello"}\';\n\ntype MyObj = { myObj: string };\n\nfunction mapObj(val: string): MyObj {\n  const obj = JSON.parse(val);\n  obj.newVal = 123;\n  return obj;\n}\n\nexport class App {\n  @Env("CFG_STR")\n  private myString: string;\n  @Env("CFG_NUM")\n  private myNumber: number;\n  @Env("CFG_BOOL")\n  private myBool: boolean;\n  @Env("CFG_OBJ")\n  private myObj: MyObj;\n  @Env<MyObj>("CFG_OBJ", mapObj)\n  private myMappedObj: MyObj;\n\n  newable() {\n    console.log(this.myString);\n    // "test"\n    console.log(this.myNumber);\n    // 123\n    console.log(this.myBool);\n    // true\n    console.log(this.myObj);\n    // {\n    //  myObj: "hello"\n    // }\n    console.log(this.myMappedObj);\n    // {\n    //  myObj: "hello",\n    //  newVal: 123\n    // }\n  }\n}\n')),(0,r.kt)("h2",{id:"circular-dependencies"},"Circular dependencies"),(0,r.kt)("p",null,"To automatically resolve dependencies, at the point of initializing, the framework will\ntraverse the dependency tree until it finds a class that it can instantiate."),(0,r.kt)("p",null,"If circular dependencies are detected, like in the scenario below, an error will be thrown."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"@Injectable\nexport class MyService {\n  newable(private app: App) {}\n}\n\n@Injectable\nexport class App {\n  newable(private service: MyService) {}\n}\n")))}m.isMDXComponent=!0}}]);